---------------------------------------------------------------------------------------
			        bean of type 'XXX' that could not be found
实际操作中常遇到这个问题，主要是由spring boot默认扫描路径是启动类当前包和子包。
如果构建中使用与启动包平级的包，就需要设置扫描如：
@ComponentScan(basePackages = {"application","controller","service"})
数据库相关扫描：
@EnableJpaRepositories(basePackages = "persistent")
@EntityScan(basePackages = "persistent")

或者设计：项目为一个根包做为启动类所在包，然后将所有层级都放在这个包下面。


---------------------------------------------------------------------------------------
						设置web服务端口
默认内嵌的tomcat端口为8080。

修改方式有三种：
1、通过配置文件。
2、启动命令中设置。
3、代码中设置。

1、配置文件：
	application.properties文件
	server.port=9000

	application.yml文件
	server: 
		port: 9000	

2、启动命令：
	java -Dserver.port=9000 -jar xxx.jar

3、代码设置：
	通过EmbeddedServletContainerCustomizer自定义容器设置端口

@Configuration
public class ServletConfig {
	@Bean
	public EmbeddedServletContainerCustomizer containerCustomizer() {
		return (container -> {
			container.setPort(9000);
		});
	}
}

4、代码：
	@Bean
	public ConfigurableServletWebServerFactory configurableServletWebServerFactory() {
		TomcatServletWebServerFactory tomcat = new TomcatServletWebServerFactory();
		tomcat.addAdditionalTomcatConnectors(createConnector());
		return tomcat;
	}

	private Connector createConnector() {
		Connector connector = new Connector("org.apache.coyote.http11.Http11NioProtocol");
		Http11NioProtocol protocol = (Http11NioProtocol) connector.getProtocolHandler();
		connector.setPort(80);
		// 最大线程数
		protocol.setMaxThreads(2);
		// 最大连接数
		protocol.setMaxConnections(10);
		return connector;
	}
---------------------------------------------------------------------------------------
					          hot swapping 热部署
IDEA配置
1.File-Settings-Compiler-Build Project automatically
2.ctrl + shift + alt + / ，选择Registry，
	Compiler autoMake allow when app running

项目pom.xml
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-devtools</artifactId>
	<optional>true</optional>
</dependency>

配置开关(application.yml)：
spring: 
  devtools: 
    restart: 
      enabled: true

有时候频繁重启可能并不好，可以指定一个触发文件，这样需要重启时修改下文件。
配置触发文件(application.yml)：
spring:
  devtools:
    restart:
      enabled: true
      trigger-file: reloadtriggerFile

原理：
spring boot使用了两个类加载器.那些不会修改的类放在基础加载器(如,第三方jars的
类).而那些活跃开发中的类放在重启加载器。当应用重启时，重启加载器会被丢弃，
再创建一个新的加载器。