---------------------------------------------------------------------------------------
Cookie:
本质上是一份存在用户本地的数据，需要在每次请求中传递。
可以将用户的标识或其它信息存储在Cookie中，每次请求中都放在Cookie请求头中。

---------------------------------------------------------------------------------------
Session:
由于Cookie明文存储用户信息造成非常大的隐患，就出现了Session。就是讲用户信息
存储在服务端，当请求进来时，通过标识获取对应Session来获取用户信息。对应方法
就是在Cookie中放入一个SessionID标识，这样用户信息放在服务端，通过标识来对应。
就解决了用户信息安全问题。
---------------------------------------------------------------------------------------
重定向与转发
重定向是将用户当前请求定向到另一个视图,之前请求中从存放的信息全部失效.
转发是将当前处理请求转发给另一个视图处理,请求中存放的信息不会失效.

重定向为服务器返回重定向响应,客户端执行发起新的请求.
转发为服务器内部执行行为,对于客户端是透明.
---------------------------------------------------------------------------------------
重定代码:
300 Multiple Choices: 可选重定向，表示客户请求的资源已经被转向到另外的地址了，但是没有
说明是否是永久重定向还是临时重定向。

301 Moved Permancently: 永久重定向，同上，但是这个状态会告知客户请求的资源已经永久性的
存在在新的重定向的URL上。

302 Moved Temporarily: 临时重定向，在HTTP1.1中状态描述是Found，这个和300一样，但是说明
请求的资源临时被转移到新的URL上，在以后可能会再次变动或者此URL会正常请求客户的连接。

303 See Other: 类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定
向目标文档应该通过GET提取（HTTP 1.1新）。

304 Not Modified: 并不真的是重定向 - 它用来响应条件GET请求，避免下载已经存在于浏览器缓
存中的数据。

305 Use Proxy: 客户请求的文档应该通过Location头所指明的代理服务器提取（HTTP 1.1新）。

306 (废弃，不在使用)

307 Temporary Redirect: 和302（Found）相同。许多浏览器会错误地响应302应答进行重定向，即
使原来的请求是POST，即使它实际上只能在POST请求的应答是303时 才能重定向。由于这个原因，
HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向
的GET和POST请求；如果是307应答，则浏览器只 能跟随对GET请求的重定向。（HTTP 1.1新）